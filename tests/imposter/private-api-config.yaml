plugin: openapi
specFile: ./private-api.yaml

validation:
  request: true

resources:
  - method: POST
    path: /session
    requestBody:
      anyOf:
        - jsonPath: $.client_id
          value: "success"
        - jsonPath: $.client_id
          value: "authorization-error"
        - jsonPath: $.client_id
          value: "check-error"
        - jsonPath: $.client_id
          value: "access-denied"
        - jsonPath: $.client_id
          value: "abandon-fail"
    capture:
      cid:
        jsonPath: $.client_id
        store: testStore
    response:
      statusCode: 201
      template: true
      content: '{"session_id": "${stores.testStore.cid}","state": "sT@t3","redirect_uri": "http://localhost:8080/return"}'

  - method: POST
    path: /session
    requestBody:
      jsonPath: $.client_id
      value: "session-500"
    response:
      statusCode: 500
      template: true
      content: |
        {}

  - method: POST
    path: /session
    requestBody:
      jsonPath: $.client_id
    response:
      statusCode: 400
      template: true
      content: "{}"

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "success"
    response:
      template: true
      statusCode: 200
      content: |
        {
          "authorizationCode": {
            "value":"auth-code-${random.uuid()}"
          },
          "state":"sT@t3",
          "redirect_uri":"http://localhost:8080/return"
        }

  - method: GET
    path: /authorization
    requestHeaders:
      session-id: "access-denied"
    response:
      template: true
      statusCode: 403
      content: |
        {
          "redirect_uri": "http://localhost:8080/return",
          "oauth_error": {
            "error_description": "gateway",
            "error": "access_denied"
          }
        }

  - method: GET
    path: /authorization
    response:
      statusCode: 400
      content: |
        {
          "redirect_uri": "http://localhost:8080/return",
          "oauth_error": {
            "error_description": "gateway",
            "error": "server_error"
          }
        }

  - method: POST
    path: /check
    requestHeaders:
      session-id: "success"
    requestBody:
      allOf:
        - jsonPath: $.nino
          operator: Matches
          value: ^(?!EE|BG|GB|KN|NK|NT|TN|ZZ)[ABCEGHJKLMNOPRSTWXYZ][ABCEGHJKLMNPRSTWXYZ][0-9]{6}[ABCD]$
    response:
      statusCode: 200
      content: |
        {"requestRetry":false}

  - method: POST
    path: /check
    requestHeaders:
      session-id: "access-denied"
    requestBody:
      allOf:
        - jsonPath: $.nino
          operator: Matches
          value: ^(?!EE|BG|GB|KN|NK|NT|TN|ZZ)[ABCEGHJKLMNOPRSTWXYZ][ABCEGHJKLMNPRSTWXYZ][0-9]{6}[ABCD]$
    response:
      statusCode: 200
      content: |
        {"requestRetry":false}

  - method: POST
    path: /check
    requestHeaders:
      session-id: "success"
    requestBody:
      allOf:
        - jsonPath: $.nino
          value: "EE123456A"
    response:
      statusCode: 200
      content: |
        {"requestRetry":true}

  - method: POST
    path: /check
    requestHeaders:
      session-id: "access-denied"
    requestBody:
      allOf:
        - jsonPath: $.nino
          value: "EE123456A"
    response:
      statusCode: 200
      content: |
        {"requestRetry":true}

  - method: POST
    path: /check
    requestHeaders:
      session-id: "check-error"
    response:
      statusCode: 500
      content: |
        {}

  - method: POST
    path: /check
    response:
      statusCode: 500
      content: |
        {
          "redirect_uri": "http://localhost:8080/return",
          "oauth_error": {
            "error_description": "gateway",
            "error": "server_error"
          }
        }

  - method: POST
    path: /abandon
    requestHeaders:
      content-type: application/json
    response:
      statusCode: 200
      content: |
        {}

  - method: POST
    path: /abandon
    requestHeaders:
      session-id: "abandon-fail"
    response:
      statusCode: 400
      content: |
        {}

  - method: GET
    path: /return
    response:
      statusCode: 200
